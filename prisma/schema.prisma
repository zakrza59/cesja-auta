generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int        @id @default(autoincrement())
  clerkId   String     @unique
  email     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    UserStatus @default(ACTIVE)
  offers    Offer[]
}

model Offer {
  id           String      @id
  clerkId      String
  title        String
  installment  Int
  description  String?
  price        Int?
  brandId      String
  modelId      String
  year         Int?
  mileage      Int?
  fuelType     String?
  transmission String?
  engineSize   Float?
  bodyTypeId   String
  color        String?
  condition    String?
  slug         String?
  status       OfferStatus @default(ACTIVE)
  type         CarType     @default(PERSONAL)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [clerkId], references: [clerkId])
  brand        Brand       @relation(fields: [brandId], references: [id])
  model        Model       @relation(fields: [modelId], references: [id])
  bodyType     BodyType    @relation(fields: [bodyTypeId], references: [id])
  // images       Image[]
}

// model Image {
//   id      Int    @id @default(autoincrement())
//   offerId String
//   url     String
//   order   Int
//   offer   Offer  @relation(fields: [offerId], references: [id])
// }

model Brand {
  id     String  @id
  name   String  @unique
  models Model[]
  offers Offer[]
}

model Model {
  id      String  @id @unique
  name    String  @unique
  brandId String
  brand   Brand   @relation(fields: [brandId], references: [id])
  offers  Offer[]
}

model BodyType {
  id      String  @id @unique
  name    String  @unique
  offers  Offer[]
}

enum UserStatus {
  ACTIVE
  DELETED
}

enum OfferStatus {
  ACTIVE
  FINISHED
  UNPAID
}

enum CarType {
  PERSONAL
  CARGO
}
