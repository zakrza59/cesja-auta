// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int        @id @default(autoincrement())
  clerkId   String     @unique
  email     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    UserStatus @default(ACTIVE)
  cars      Car[]
}

model Car {
  id           Int      @id @default(autoincrement())
  clerkId      String
  title        String
  description  String?
  price        Float?
  makeId       Int
  modelId      Int
  year         Int?
  mileage      Int?
  fuelType     String?
  transmission String?
  engineSize   Float?
  bodyType     String?
  color        String?
  condition    String?
  status       Status   @default(ACTIVE)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [clerkId], references: [clerkId])
  make         Make     @relation(fields: [makeId], references: [id])
  model        Model    @relation(fields: [modelId], references: [id])
  // images       Image[]
}

// model Image {
//   id    Int    @id @default(autoincrement())
//   carId Int
//   url   String
//   order Int
//   car   Car    @relation(fields: [carId], references: [id])
// }

model Make {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  models Model[]
  cars   Car[]
}

model Model {
  id     Int    @id @default(autoincrement())
  makeId Int
  name   String
  make   Make   @relation(fields: [makeId], references: [id])
  cars   Car[]
}

enum UserStatus {
  ACTIVE
  DELETED
}

enum Status {
  ACTIVE
  FINISHED
  UNPAID
}
